rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && (
        request.auth.uid == userId || 
        request.auth.token.user_id == userId ||
        request.auth.token.sub == userId ||
        request.auth.token.provider == 'xloudid' ||
        userId.matches('^xloudid_.*$')
      );
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      
      // Nested conversations collection
      match /conversations/{conversationId} {
        allow read, write: if isOwner(userId);
        
        // Nested messages collection
        match /messages/{messageId} {
          allow read, write: if isOwner(userId);
        }
      }

      // Nested memory collection
      match /memory/{memoryId} {
        allow read, write: if isOwner(userId);
      }

      // Nested subscription collection
      match /subscription/{subscriptionId} {
        allow read, write: if isOwner(userId);
      }

      // Nested usageStats collection
      match /usageStats/{statsId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Checkout sessions collection
    match /checkout_sessions/{sessionId} {
      allow create: if isAuthenticated() && (
        request.resource.data.userId == request.auth.uid ||
        request.resource.data.userId == request.auth.token.user_id ||
        request.resource.data.userId == request.auth.token.sub ||
        request.auth.token.provider == 'xloudid' ||
        request.resource.data.userId.matches('^xloudid_.*$')
      );
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.userId == request.auth.token.user_id ||
        resource.data.userId == request.auth.token.sub ||
        request.auth.token.provider == 'xloudid' ||
        resource.data.userId.matches('^xloudid_.*$')
      );
    }
  }
} 